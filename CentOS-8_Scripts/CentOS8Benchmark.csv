Ensure mounting of cramfs filesystems is disabled 1,install /bin/true,"modprobe -n -v cramfs | awk '{print $1 "" "" $2}'",Edit or create a file in the /etc/modprobe.d/ directory ending in .conf and add the following line:\ninstall cramfs /bin/true
Ensure mounting of cramfs filesystems is disabled 2,,lsmod | grep cramfs,Run the following command to unload the cramfs module:\nrmmod cramfs
Ensure mounting of vFAT filesystems is limited 1,install /bin/true,"modprobe -n -v vfat | aw '{print $1 "" "" $2}'",Edit or create a file in the /etc/modprobe.d/ directory ending in .conf and add the following line:\ninstall vfat /bin/true
Ensure mounting of vFAT filesystems is limited 2,,lsmod | grep vfat,Run the following command to unload the vfat module:\nrmmod vfat
Ensure mounting of squashfs filesystems is disabled 1,install /bin/true,"modprobe -n -v squashfs | awk '{print $1 "" "" $2}'",Edit or create a file in the /etc/modprobe.d/ directory ending in .conf and add the following line:\ninstall squashfs /bin/true
Ensure mounting of squashfs filesystems is disabled 2,,lsmod | grep squashfs,Run the following command to unload the squashfs module:\nrmmod squashfs
Ensure mounting of udf filesystems is disabled 1,install /bin/true,"modprobe -n -v udf | awk '{print $1 "" "" $2}'",Edit or create a file in the /etc/modprobe.d/ directory ending in .conf and add the following line:\ninstall udf /bin/true
Ensure mounting of udf filesystems is disabled 2,,lsmod | grep udf,Run the following command to unload the udf module:\n# rmmod udf
Ensure /tmp is configured,enabled,systemctl is-enabled tmp.mount,Run the following commands to enable systemd /tmp mounting:\nsystemctl unmask tmp.mount\nsystemctl enable tmp.mount
Ensure nodev option set on /tmp partition,,mount | grep -E '\s/tmp\s' | grep -v nodev,"""Run the following command to remount /tmp :\nmount -o remount,nodev /tmp"""
Ensure nosuid option set on /tmp partition,,mount | grep -E '\s/tmp\s' | grep -v nosuid,"""Run the following command to remount /tmp :\nmount -o remount,nosuid /tmp"""
Ensure noexec option set on /tmp partition,,mount | grep -E '\s/tmp\s' | grep -v noexec,"""Run the following command to remount /tmp :\nmount -o remount,noexec /tmp"""
Ensure sticky bit is set on all world-writable directories,,df --local -P | awk '{if (NR!=1) print $6}' | xargs -I '{}' find '{}' -xdev-type d \( -perm -0002 -a ! -perm -1000 \) 2>/dev/null,Run the following command to set the sticky bit on all world writable directories:\ndf --local -P | awk '{if (NR!=1) print $6}' | xargs -I '{}' find '{}' -xdev\n-type d \( -perm -0002 -a ! -perm -1000 \) 2>/dev/null | xargs -I '{}' chmod\na+t '{}'
Disable Automounting,disabled,systemctl is-enabled autofs,Run the following command to disable autofs:\nsystemctl --now disable autofs
Disable USB Storage 1,install /bin/true,"modprobe -n -v usb-storage | awk '{print $1 "" "" $2}'","Edit or create a file in the /etc/modprobe.d/ directory ending in .conf\nand add the following line:\ninstall usb-storage /bin/true"
Disable USB Storage 2,,lsmod | grep usb-storage,Run the following command to unload the usb-storage module:\nrmmod usb-storage
Ensure gpgcheck is globally activated 1,gpgcheck=1,grep ^gpgcheck /etc/yum.conf,Edit /etc/yum.conf and set 'gpgcheck=1' in the [main] section.
Ensure sudo is installed,sudo,rpm -q sudo | cut -c1-4,Run the following command to install sudo\ndnf install sudo
Ensure sudo commands use pty,Defaults use_pty,"""grep -Ei '^\s*Defaults\s+(\[^#]+,\s*)?use_pty' /etc/sudoers /etc/sudoers.d/* | awk '{print $1 "" "" $2}'""",Edit the file /etc/sudoers or a file in /etc/sudoers.d/ with visudo -f and add the following line:\nDefaults use_pty
Ensure sudo log file exists,"Defaults logfile=""/var/log/sudo.log""","""grep -Ei '^\s*Defaults\s+([^#]+,\s*)?logfile=' /etc/sudoers /etc/sudoers.d/* | awk '{print $1 "" "" $2}'""","Edit the file /etc/sudoers or a file in /etc/sudoers.d/ with visudo -f and add the following line:\nDefaults logfile=""<PATH TO CUSTOM LOG FILE>"""
Ensure AIDE is installed,aide,rpm -q aide | cut -c1-4,Run the following command to install AIDE:\ndnf install aide
Ensure permissions on bootloader config are configured 1,(0600/-rw-r--r--) 0/ 0/,"stat /boot/grub2/grub.cfg | grep -n Access | head -n 1 | awk '{print $2 "" "" $5 "" "" $9}'",Run the following commands to set permissions on your grub configuration:\nchown root:root /boot/grub2/grub.cfg\nchmod og-rwx /boot/grub2/grub.cfg
Ensure permissions on bootloader config are configured 2,(0600/-rw-r--r--) 0/ 0/,"stat /boot/grub2/grubenv | grep -n Access | head -n 1 | awk '{print $2 "" "" $5 "" "" $9}'",Run the following commands to set permissions on your grub configuration:\nchown root:root /boot/grub2/grubenv\nchmod og-rwx /boot/grub2/grubenv
Ensure authentication required for single user mode 1,ExecStart=-/usr/lib/systemd/systemd-sulogin-shell rescue,"grep /systemd-sulogin-shell /usr/lib/systemd/system/rescue.service | awk '{print $1 "" "" $2}'",Edit /usr/lib/systemd/system/rescue.service and add/modify the following line:\nExecStart=-/usr/lib/systemd/systemd-sulogin-shell rescue
Ensure authentication required for single user mode 2,ExecStart=-/usr/lib/systemd/systemd-sulogin-shell emergency,"grep /systemd-sulogin-shell /usr/lib/systemd/system/emergency.service | awk '{print $1 "" "" $2}'",Edit /usr/lib/systemd/system/emergency.service and add/modify the following line:\nExecStart=-/usr/lib/systemd/systemd-sulogin-shell emergency
Ensure core dumps are restricted 1,* hard core 0,"grep -E ""^\s*\*\s+hard\s+core"" /etc/security/limits.conf /etc/security/limits.d/* | awk '{print $1 "" "" $2 "" "" $3 "" "" $4}'",Add the following line to /etc/security/limits.conf or a /etc/security/limits.d/* file:\n* hard core 0\nRun the command:\nsystemctl daemon-reload
Ensure core dumps are restricted 2,fs.suid_dumpable = 0,"sysctl fs.suid_dumpable | awk '{print $1 "" "" $2 "" "" $3}'",Set the following parameter in /etc/sysctl.conf or a /etc/sysctl.d/* file:\nfs.suid_dumpable = 0\nRun the command:\nsystemctl daemon-reload
Ensure core dumps are restricted 3,fs.suid_dumpable = 0,"grep ""fs\.suid_dumpable"" /etc/sysctl.conf /etc/sysctl.d/* | awk '{print $1 "" "" $2 "" "" $3}'",Run the following command to set the active kernel parameter:\nsysctl -w fs.suid_dumpable=0\nRun the command:\nsystemctl daemon-reload
Ensure address space layout randomization (ASLR) is enabled 1,kernel.randomize_va_space = 2,"sysctl kernel.randomize_va_space | awk '{print $1 "" "" $2 "" "" $3}'",Set the following parameter in /etc/sysctl.conf or a /etc/sysctl.d/* file:\nkernel.randomize_va_space = 2
Ensure address space layout randomization (ASLR) is enabled 2,kernel.randomize_va_space = 2,"grep ""kernel\.randomize_va_space"" /etc/sysctl.conf /etc/sysctl.d/* | awk '{print $1 "" "" $2 "" "" $3}'",Run the following command to set the active kernel parameter:\nsysctl -w kernel.randomize_va_space=2
Ensure SELinux is installed,libselinux,rpm -q libselinux | cut -c1-10,Run the following command to install SELinux:\ndnf install libselinux
Ensure SELinux is not disabled in bootloader configuration,,grep -E 'kernelopts=(\S+\s+)*(selinux=0|enforcing=0)+\b' /boot/grub2/grubenv,"Edit /etc/default/grub and remove all instances of selinux=0 and enforcing=0 from all\nCMDLINE_LINUX parameters:\nGRUB_CMDLINE_LINUX_DEFAULT=""quiet""\nGRUB_CMDLINE_LINUX=""""\n\nRun the following command to update the grub2 configuration:\ngrub2-mkconfig -o /boot/grub2/grub.cfg"
Ensure SELinux policy is configured 1,SELINUXTYPE=targeted,grep -E '^\s*SELINUXTYPE=(targeted|mls)\b' /etc/selinux/config,Edit the /etc/selinux/config file to set the SELINUXTYPE parameter:\nSELINUXTYPE=targeted
Ensure SELinux policy is configured 2,targeted,sestatus | grep Loaded | awk '{print $4}',Edit the /etc/selinux/config file to set the SELINUXTYPE parameter:\nSELINUXTYPE=targeted
Ensure the SELinux state is enforcing 1,SELINUX=enforcing,grep -E '^\s*SELINUX=enforcing' /etc/selinux/config,Edit the /etc/selinux/config file to set the SELINUX parameter:\nSELINUX=enforcing
Ensure no unconfined services exist,, ps -eZ | grep unconfined_service_t,Investigate any unconfined processes found during the audit action. They may need to have an existing security context assigned to them or a policy built for them.
Ensure SETroubleshoot is not installed,not installed,"rpm -q setroubleshoot | awk '{print $4 "" "" $5}'",Run the following command to uninstall setroubleshoot:\ndnf remove setroubleshoot
Ensure the MCS Translation Service (mcstrans) is not installed,not installed,"rpm -q mcstrans | awk '{print $4 "" "" $5}'",Run the following command to uninstall mcstrans:\ndnf remove mcstrans
Ensure permissions on /etc/motd are configured,(0644/-rw-r--r--) 0/ 0/,"stat /etc/motd | grep -n Access | head -n 1 | awk '{print $2 "" "" $5 "" "" $9}'","Run the following commands to set permissions on /etc/motd :\nchown root:root /etc/motd\nchmod u-x,go-wx /etc/motd"
Ensure permissions on /etc/issue are configured,(0644/-rw-r--r--) 0/ 0/,"stat /etc/issue.net | grep -n Access | head -n 1 | awk '{print $2 "" "" $5 "" "" $9}'","Run the following commands to set permissions on /etc/issue :\nchown root:root /etc/issue\nchmod u-x,go-wx /etc/issue"
Ensure permissions on /etc/issue.net are configured,(0644/-rw-r--r--) 0/ 0/,"stat /etc/issue.net | grep -n Access | head -n 1 | awk '{print $2 "" "" $5 "" "" $9}'","Run the following commands to set permissions on /etc/issue.net :\nchown root:root /etc/issue.net\nchmod u-x,go-wx /etc/issue.net"
Ensure system-wide crypto policy is not legacy,,grep -E -i '^\s*LEGACY\s*(\s+#.*)?$' /etc/crypto-policies/config,"Run the following command to change the system-wide crypto policy\nupdate-crypto-policies --set <CRYPTO POLICY>"